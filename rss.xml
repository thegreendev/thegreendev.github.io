<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>&lt; Dev Nhà Người Ta /&gt;</title>
    <link>https://devnhanguoita.com/</link>
    <atom:link href="/rss.xml" rel="self" type="application/rss+xml"/>
    
    <description>Giúp dev nhà mình trở thành dev con nhà người ta</description>
    <pubDate>Fri, 09 Mar 2018 15:34:23 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>SEO cơ bản cho web developer</title>
      <link>https://devnhanguoita.com/posts/SEO-co-ban-cho-web-developer/</link>
      <guid>https://devnhanguoita.com/posts/SEO-co-ban-cho-web-developer/</guid>
      <pubDate>Fri, 09 Mar 2018 14:02:15 GMT</pubDate>
      <description>
      
        Developer cũng nên cần biết một chút về SEO
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="SEO-la-gi"><a href="#SEO-la-gi" class="headerlink" title="SEO là gì"></a>SEO là gì</h3><p>SEO viết tắt của Search Engine Optimize, đại khái là việc tối ưu hoá nội dung của web trên các công cụ tìm kiếm (ví dụ Google search).<br>Thế giới SEO thì khá là rộng lớn, nhưng tóm lại là có 2 loại để tối ưu chính đó là on-page SEO và off-page SEO.</p>
<ul>
<li>On-page SEO là các cách thực hiện trên chính trang web để tăng rank, bao gồm các việc như tối ưu html, cấu trúc nội dung, chất lượng nội dung..</li>
<li>Off-page SEO là việc thực hiện các cách để xây dựng được backlink, thường được thực hiện sau on-page SEO và bởi đội ngũ Marketing.</li>
</ul>
<p>Đối với một web developer thì chúng ta chỉ cần quan tâm đến On-page SEO, và chúng ta nên quan tâm đến việc này vì những dòng code của bạn sẽ ảnh hưởng ít nhiều đến SEO đấy.<br>Trong những bài kế tiếp, mình sẽ lần lượt chỉ ra những thứ mà một web developer cần biết và lưu tâm.</p>
<h3 id="Developer-can-biet-gi"><a href="#Developer-can-biet-gi" class="headerlink" title="Developer cần biết gì?"></a>Developer cần biết gì?</h3><p>Vậy với vai trò là một developer, chúng ta nên cần biết về những gì?</p>
<ul>
<li>Những thẻ HTML quan trọng</li>
<li>Metadata, structured data</li>
<li>Sitemap</li>
<li>Phân trang</li>
<li>HTTP Status code</li>
<li>Best practice cho URL</li>
<li>Một số tool cho webmaster</li>
<li>..</li>
</ul>
<p>Theo dõi các bài viết tiếp theo về chủ đề này tại <a href="http://devnhanguoita.com/categories/SEO-Cho-Developer/">SEO cho developer</a> nhé !!</p>
]]></content:encoded>
      
      <comments>https://devnhanguoita.com/posts/SEO-co-ban-cho-web-developer/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Câu hỏi phỏng vấn Dev các thể loại</title>
      <link>https://devnhanguoita.com/posts/Tong-hop-cac-cau-hoi-phong-van-Dev-cac-the-loai/</link>
      <guid>https://devnhanguoita.com/posts/Tong-hop-cac-cau-hoi-phong-van-Dev-cac-the-loai/</guid>
      <pubDate>Fri, 29 Dec 2017 14:33:09 GMT</pubDate>
      <description>
      
        Giới thiệu danh sách tổng hợp các câu hỏi phỏng vấn đủ thể loại cho dân Dev nhé.
      
      </description>
      
      <content:encoded><![CDATA[<p>Theo một nghiên cứu nào đó mình không biết thì giai đoạn sau Tết âm lịch là thời điểm mọi người có xu hướng nhảy việc cao nhất 😀, và dân Dev chúng ta cũng không phải ngoại lệ.</p>
<p>Nhằm chuẩn bị cho các bạn một hành trang tốt nhất cho hành trình nhảy việc đầy cam go sắp tới, mình xin giới thiệu tài liệu tổng hợp rất nhiều câu hỏi phỏng vấn của các thể loại ngôn ngữ rất hay.</p>
<p>Nó là repository này <a href="https://github.com/MaximAbramchuck/awesome-interview-questions" target="_blank" rel="external">Awesome Interview Questions</a></p>
<p><img src="/img/devnhanguoita-inteview-question.png" alt="Hình minh hoạ"></p>
<p>Repo này thì cũng hơi lâu rồi, first commit từ 2 năm trước lận. Tuy nhiên kiến thức thì mình hi vọng là nó cũng chưa có lạc hậu lắm 🙂</p>
<p>Tác giả <a href="https://github.com/MaximAbramchuck" target="_blank" rel="external">Maksim Abramchuk</a> đã cất công sưu tầm, lượm lặt ở nhiều nơi để tạo ra danh sách tài liệu những câu hỏi phỏng vấn này. Repo được chia thành các thể loại cho các bạn dễ dùng, gồm các phần chính: Ngôn ngữ lập trình, frameworks; Database; OS, Giải thuật,.. mọi người muốn ôn luyện phần nào thì tập trung phần đó cho dễ.</p>
<p>Chúc vui!</p>
]]></content:encoded>
      
      <comments>https://devnhanguoita.com/posts/Tong-hop-cac-cau-hoi-phong-van-Dev-cac-the-loai/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Tôi đã publish chrome extension đầu tiên như thế nào</title>
      <link>https://devnhanguoita.com/posts/Toi-da-viet-chrome-extension-dau-tien-nhu-the-nao/</link>
      <guid>https://devnhanguoita.com/posts/Toi-da-viet-chrome-extension-dau-tien-nhu-the-nao/</guid>
      <pubDate>Sat, 25 Nov 2017 03:35:13 GMT</pubDate>
      <description>
      
        Một số kinh nghiệm khi làm việc với google webstore để upload chrome extension đầu tiên.
      
      </description>
      
      <content:encoded><![CDATA[<p>Đặt title cho nó thời thượng kiểu <em>“Tôi đã abcxyz như thế nào”</em> thôi, chứ thật ra bài này chả có gì cao siêu cả.</p>
<p>Anh bạn bên toidicodedao.com cũng đã có một bài hướng dẫn <a href="https://toidicodedao.com/2017/07/04/em-them-veu-tu-y-tuong-den-san-pham-chi-trong-30-phut/" target="_blank" rel="external">viết chrome extension</a> rồi, nên bài viết này tui chỉ chia sẻ quá trình publish extension đầu tiên của mình lên Chrome Store và những vấn đề nên chú ý khi publish.</p>
<h3 id="Hoan-canh-ra-doi"><a href="#Hoan-canh-ra-doi" class="headerlink" title="Hoàn cảnh ra đời"></a>Hoàn cảnh ra đời</h3><p>Tui là một người thích đá bóng và bóng đá (bóng, ko phải “bóng”). Bởi thích xem đá bóng nên tui cũng hay đọc tin tức bóng đá.<br>Đến một ngày nọ, tui thấy thời gian bỏ ra vào xem ba cái tin này nó hơi nhiều, để thời gian đó làm mấy việc tào lao khác chắc có ích hơn. Nên tui quyết định làm một cái gì đó để mình chỉ cần đọc lướt qua các tin nổi bật thôi, thế nên cái extension này ra đời.</p>
<p>Tui gọi nó là <a href="https://chrome.google.com/webstore/detail/football-news-reader/dojfchbejdepapgopodpalakingoallm" target="_blank" rel="external">Football News Reader</a></p>
<h3 id="Qua-trinh-thanh-lap"><a href="#Qua-trinh-thanh-lap" class="headerlink" title="Quá trình thành lập"></a>Quá trình thành lập</h3><p>Cái giao diện chính của nó nó thế này:<br><img src="/img/chrome-extension-1.png" alt="Giao diện của extension"></p>
<p>Đại khái thì cái extension này sẽ lấy tin tức mới nhất về bóng đá từ một số trang thể thao lớn có cung cấp API và hiển thị lên cho mình xem tin mới nhanh chóng hơn. Bạn có thể click vào link để xem chi tiết về bài viết đó (đọc để cải thiện tiếng Anh 😀)<br>Hiện tại thì mình hiển thị thông tin từ 4 trang là Four Four Two, The Sport Bible, Fox Sports và ESPN thông qua gọi api tới <a href="http://newsapi.org/" target="_blank" rel="external">NewsAPI</a>.</p>
<p>Cách để viết một cái extension đơn giản như thế này, bạn có thể xem trong bài viết của toidicodedao mình có đưa link ở trên, hoặc đọc phần Getting Started của Chrome Extension ở đây nè <a href="https://developer.chrome.com/extensions/getstarted" target="_blank" rel="external">https://developer.chrome.com/extensions/getstarted</a>.</p>
<h3 id="Bai-hoc-kinh-nghiem"><a href="#Bai-hoc-kinh-nghiem" class="headerlink" title="Bài học kinh nghiệm"></a>Bài học kinh nghiệm</h3><p>Quá trình upload lên webstore, chủ yếu làm theo hướng dẫn của Google ở đây: <a href="https://developer.chrome.com/webstore/publish" target="_blank" rel="external">https://developer.chrome.com/webstore/publish</a> là được.</p>
<p>Có một số chú ý như:</p>
<ul>
<li><p>Bạn sẽ tốn <strong>5 USD</strong> cống nạp cho Google để có thể upload tối đa 20 thứ lên Chrome Webstore, đây là phí để verify account của bạn.</p>
</li>
<li><p>Việc đánh version của ứng dụng quan trọng hơn bạn nghĩ đấy (version được chỉ định trong file manifest.json của extension), vì khi có thay đổi, dù nhỏ thôi, bạn đều phải nâng version lên. Cho nên, hãy cân nhắc đánh version major, minor, patch thế nào cho hợp lí.</p>
</li>
<li><p>Hình ảnh: google cần ít nhất 1 screenshot sản phẩm để hiện lên trên webstore, với resolution hiện tại phải chính xác là 1280x800 hoặc 640x400. Cho nên, bạn chụp ảnh màn hình sản phẩm nhớ canh chỉnh đúng tỉ lệ, chứ không bị reject thì mắc công lắm đấy :D</p>
</li>
<li><p>Hình ảnh để promote sản phẩm của bạn (những hình ảnh sẽ xuất hiện trong search results, trong featured extension..): như trên thì những hình này cũng phải theo tỉ lệ cố định, là 440x280 cho hình nhỏ, 920x680 cho hình bự và 1400x560 cho marquee.</p>
</li>
<li><p>Những hình ảnh này nó cũng hơi nhọc một tí, ngoài tỉ lệ đúng ra, thì hình của bạn phải tuân thủ những quy định của Chrome <a href="https://developer.chrome.com/webstore/images" target="_blank" rel="external">ở đây</a> như không có quá nhiều chữ, chữ không quá nhỏ, không quá nhiều chi tiết,.. </p>
</li>
</ul>
<h3 id="Goc-quang-cao"><a href="#Goc-quang-cao" class="headerlink" title="Góc quảng cáo"></a>Góc quảng cáo</h3><p>Cuối cùng thì, những ai có sở thích chơi bóng giống mình, cài thử <a href="https://chrome.google.com/webstore/detail/football-news-reader/dojfchbejdepapgopodpalakingoallm" target="_blank" rel="external">Football News Reader</a> và quánh giá sao dùm mình nha (giống grab xin sao quá, hehe =)))<br>Mọi ý kiến đóng góp, chê bai comment lại đây cho mình luôn, hứa sẽ xem 😆</p>
]]></content:encoded>
      
      <comments>https://devnhanguoita.com/posts/Toi-da-viet-chrome-extension-dau-tien-nhu-the-nao/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Suy nghĩ như một lập trình viên</title>
      <link>https://devnhanguoita.com/posts/Suy-nghi-nhu-mot-lap-trinh-vien/</link>
      <guid>https://devnhanguoita.com/posts/Suy-nghi-nhu-mot-lap-trinh-vien/</guid>
      <pubDate>Sat, 14 Oct 2017 02:20:07 GMT</pubDate>
      <description>
      
        Tôi không biết javascript, tôi không thể viết cái component này được. Tôi nghĩ là tôi không thể làm nó được đâu, vì tôi không biết cách suy nghĩ như một lập trình viên được
      
      </description>
      
      <content:encoded><![CDATA[<blockquote>
<p>Mình không thích dùng từ “lập trình viên” lắm, nhưng lại thích để tiếng Việt trên cái tiêu đề, nên trong bài viết mình sẽ ghi là “programmer” nhé 😎<br>Mình chỉ viết lại theo cách hiểu của mình từ bài này: <a href="https://medium.freecodecamp.org/how-to-think-like-a-programmer-3ae955d414cd" target="_blank" rel="external">How to think like a programmer</a>. Vì vậy, khuyến khích các bạn đọc bài viết gốc để hiểu rõ và nắm bắt được cái tinh thần tác giả muốn nói hơn, chào thân ái! 😎</p>
</blockquote>
<p>“Tôi không biết javascript, tôi không thể viết cái component này được, đầu óc tôi trống rỗng mỗi khi tôi bắt đầu viết một đoạn code. Tôi nghĩ là tôi không thể làm nó được đâu, vì tôi không biết cách suy nghĩ như một programmer”</p>
<p>Đây có vẻ như một vấn đề hay gặp của bất cứ ai khi mới bắt đầu học lập trình nhỉ? Bạn nghĩ là bạn không suy nghĩ như một programmer được?, nhưng không hẳn như vậy đâu, để giải quyết sự sợ hãi này, hãy làm theo 4 bước sau:</p>
<h3 id="Buoc-1-phan-chia-bai-toan-thanh-nhung-bai-toan-nho-hon"><a href="#Buoc-1-phan-chia-bai-toan-thanh-nhung-bai-toan-nho-hon" class="headerlink" title="Bước 1, phân chia bài toán thành những bài toán nhỏ hơn"></a>Bước 1, phân chia bài toán thành những bài toán nhỏ hơn</h3><p>Mình đến với một bài toán nghe quen quen nha: “Làm sao để nhét 1 con voi vào tủ lạnh?”<br>Đa số sẽ có 3 bước sau:</p>
<ul>
<li>Mở cửa tủ lạnh</li>
<li>Nhét con voi vào</li>
<li>Đóng cửa lại</li>
</ul>
<p>Okie, done, vấn đề được giải quyết.</p>
<p>Tuy nhiên, câu trả lời trên là một ví dụ tốt nhất cho việc tại sao bạn lại thấy khó khăn khi phải đối mặt với một file javascript trống rỗng. Bạn thiếu <strong>các bước thực hiện</strong>.</p>
<p>Nếu suy nghĩ một cách logic hơn, bạn sẽ nhận ra một số vấn đề vẫn còn chưa được trả lời như:</p>
<ul>
<li>chúng ta đang nói về cái tủ lạnh nào?</li>
<li>chúng ta nhắc đến loại voi nào?</li>
<li>nếu con voi quá lớn, không vừa với cái tủ lạnh thì chúng ta sẽ làm như thế nào?</li>
<li>bạn sẽ tìm thấy con voi ở đâu?</li>
<li>bạn vận chuyển con voi đến cái tủ lạnh bằng cách nào?</li>
</ul>
<p>Khi code cũng vậy, bạn phải trả lời được những câu hỏi nhỏ như vậy mà bạn có thể nghĩ ra. Đó là lí do vì sao bước đầu tiên là <strong>chia nhỏ vấn đề ra</strong>.</p>
<h3 id="Buoc-2-tim-giai-phap-cho-nhung-bai-toan-nho-hon-do"><a href="#Buoc-2-tim-giai-phap-cho-nhung-bai-toan-nho-hon-do" class="headerlink" title="Bước 2, tìm giải pháp cho những bài toán nhỏ hơn đó"></a>Bước 2, tìm giải pháp cho những bài toán nhỏ hơn đó</h3><p>Tiếp theo là đi <strong>tìm giải pháp cho mỗi vấn đề đã chia nhỏ</strong> ở trên. Bạn phải càng chi tiết càng tốt.</p>
<ul>
<li>cái tủ lạnh nào? -&gt; tủ lạnh trong nhà bếp của bạn</li>
<li>loại voi nào? -&gt; voi châu Phi</li>
<li>nếu con voi to quá thì làm sao? -&gt; dùng súng thu nhỏ để thu nhỏ con voi lại (doreamon fan 😎)</li>
<li>tìm thấy con voi ở đâu? -&gt; châu Phi</li>
<li>bạn sẽ vận chuyển con voi như thế nào? -&gt; bỏ nó vào túi xách sau khi đã thu nhỏ, mang lên máy bay và bay về ✈️</li>
</ul>
<p>Một khi bạn đã có tất cả câu trả lời cho những câu hỏi nhỏ, hãy gom nó lại để giải quyết bài toán lớn của chúng ta.</p>
<h3 id="Buoc-3-tap-hop-cac-giai-phap-do-lai-mot-cach-chat-che"><a href="#Buoc-3-tap-hop-cac-giai-phap-do-lai-mot-cach-chat-che" class="headerlink" title="Bước 3, tập hợp các giải pháp đó lại một cách chặt chẽ"></a>Bước 3, tập hợp các giải pháp đó lại một cách chặt chẽ</h3><p>Okie, đến đây thì bước thứ 3 đơn giản là gộp các giải pháp cho các bài toán nhỏ lại một cách hợp lí, để giải quyết bài toán lớn nhét-con-voi-vào-tủ-lạnh của chúng ta.</p>
<p>Quy trình sẽ như thế này:</p>
<ol>
<li>mượn cây súng thu nhỏ của doremon</li>
<li>bay đến châu Phi</li>
<li>đến công viên voi Addo ở Nam Phi</li>
<li>tìm một con voi</li>
<li>bắn nó với cây súng thu nhỏ</li>
<li>bỏ con voi vào túi xách</li>
<li>bay trở về nhà</li>
<li>đặt con voi vào tủ lạnh</li>
</ol>
<h3 id="Buoc-4-refactor-cai-tien"><a href="#Buoc-4-refactor-cai-tien" class="headerlink" title="Bước 4, refactor, cải tiến"></a>Bước 4, refactor, cải tiến</h3><p>Bạn chịu khó xem hết ví dụ thực tế của tác giả nha 🤣<br>Ví dụ của tác giả về việc tạo một cái nút, khi click vào đó thì sẽ hiển thị thanh menu ở sidebar. Một ví dụ đơn giản, nhưng bạn hãy đọc để xem tác giả đã chia nhỏ, phân tích và giải quyết vấn đề như thế nào.<br>Trong đó bao gồm bước 4, refactor code và cải tiến nó.</p>
<h3 id="Tum-lai"><a href="#Tum-lai" class="headerlink" title="Túm lại,"></a>Túm lại,</h3><p>Suy nghĩ như một programmer cũng đơn giản thôi. Yếu tố quan trọng là cách bạn chia nhỏ vấn đề thành những vấn đề nhỏ hơn như thế nào. Khi đã có những bài toán nhỏ, bạn sẽ tìm giải pháp cho chúng, và code. Trong lúc đó bạn cũng sẽ gặp các vấn đề khác mà mình chưa nghĩ ra, hãy giải quyết nó luôn.</p>
]]></content:encoded>
      
      <comments>https://devnhanguoita.com/posts/Suy-nghi-nhu-mot-lap-trinh-vien/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Những nguyên lí cơ bản của chủ nghĩa code sạch</title>
      <link>https://devnhanguoita.com/posts/Nhung-nguyen-li-co-ban-cua-chu-nghia-clean-code/</link>
      <guid>https://devnhanguoita.com/posts/Nhung-nguyen-li-co-ban-cua-chu-nghia-clean-code/</guid>
      <pubDate>Sat, 23 Sep 2017 03:17:05 GMT</pubDate>
      <description>
      
        Bạn có biết đơn vị để đo code của bạn có sạch hay không là số lần WTF trên mỗi phút khi có người review code?
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="/img/clean-code-principle-1.jpeg" alt="clean-code"></p>
<h2 id="Code-sach-la"><a href="#Code-sach-la" class="headerlink" title="Code sạch là"></a>Code sạch là</h2><p>Code không bốc mùi (smell code 💩). Nhìn lại hình ở trên tí nhé ☝️, chất lượng của code được đo bằng đơn vị số lần wtf mỗi phút. Bạn viết code sao mà những người review, dev khác không phải thốt lên wtf như vậy là sạch 😀</p>
<h2 id="Tai-sao-phai-code-sach"><a href="#Tai-sao-phai-code-sach" class="headerlink" title="Tại sao phải code sạch?"></a>Tại sao phải code sạch?</h2><p>Ờ, đó là trách nhiệm của bạn mà 😎.<br>Codebase cũng giống như database của một website vậy, tỉ lệ đọc:ghi thường là 10:1. Mọi người ai cũng phải đọc được code rồi mới viết code phải không nào? Vì vậy, hãy viết code sao cho người khác (hoặc chính bạn trong tương lai) có thể đọc hiểu được.</p>
<p>Mục đích của code sạch:</p>
<ul>
<li>Thay đổi code nhanh hơn</li>
<li>Đọc hiểu code dễ hơn</li>
</ul>
<p>Bạn không muốn mất 2h để đọc hiểu một module đáng lẽ chỉ cần đọc trong vài phút chứ?</p>
<h2 id="Nhung-nguyen-li-co-ban-cua-chu-nghia-code-sach"><a href="#Nhung-nguyen-li-co-ban-cua-chu-nghia-code-sach" class="headerlink" title="Những nguyên lí cơ bản của chủ nghĩa code sạch"></a>Những nguyên lí cơ bản của chủ nghĩa code sạch</h2><h3 id="1-Dat-ten"><a href="#1-Dat-ten" class="headerlink" title="1. Đặt tên"></a>1. Đặt tên</h3><p>Mọi thứ đều có tên. Chúng ta đặt tên cho mọi thứ. Tên để nhận dạng một đối tượng.<br>Okie, vậy tôi nên đặt tên trong code của tôi như thế nào? Có vài điều nên chú ý sau:</p>
<ul>
<li>Tên phải mô tả được đối tượng (biến đó lưu cái gì, hàm đó làm gì, class đó là gì,..)</li>
<li>Tên có thể tìm kiếm được.</li>
<li>Tránh sử dụng từ viết tắt, từ dễ gây nhầm lẫn.</li>
</ul>
<p>Xem thêm bài về việc đặt tên <a href="/posts/Code-sach-nha-nguoi-ta-Dat-ten-cho-con/">ở đây</a> nhé.</p>
<h3 id="2-Comment"><a href="#2-Comment" class="headerlink" title="2. Comment"></a>2. Comment</h3><blockquote>
<p>Code never lies. Comments sometimes do.</p>
</blockquote>
<p>Vâng, code thì không bao giờ nói dối bạn, còn comment thì có đấy. Bạn đã bao giờ gặp trường hợp code một đường, comment cho đoạn code đó một nẻo chưa?</p>
<p>Bạn không cần phải có comment. Yeap, tên là tài liệu đầy đủ và tốt nhất rồi :), không cần thêm comment, chú thích làm gì nếu bạn không thật sự cần.</p>
<p>Trong trường hợp vẫn cần comment, hãy:</p>
<ul>
<li>Cố gắng giải thích bằng code của mình, đừng comment 😀</li>
<li>Viết comment ngắn gọn, đừng dư thừa.</li>
<li>Đừng comment code không dùng, hãy xoá nó luôn đi.</li>
</ul>
<h3 id="3-Format"><a href="#3-Format" class="headerlink" title="3. Format"></a>3. Format</h3><p>Ông bà ta nói “tốt gỗ hơn tốt nước sơn”, cơ mà không phải lúc nào cũng lo chọn gỗ tốt mà không quan tâm đến nước sơn. Ai chả thích cái đẹp cơ chứ 😛. Code cũng vậy, dù bạn có viết tốt như thế nào, mà trình bày code xấu tệ thì.. cũng chưa sạch được.</p>
<p>Gần đây mình có đọc bài viết về tại sao DHH - cha đẻ của Rails từ chối 80% ứng viên (bài viết <a href="https://medium.com/@christophelimpalair/why-the-founder-of-rails-automatically-rejects-80-of-software-engineer-applicants-4e2a4d255f58" target="_blank" rel="external">tại đây</a>). Có một ý trong đó nói về “Your code looks terrible!”. Nếu là người tuyển dụng, mình cũng sẽ không tuyển những người trình bày code xấu như hình dưới đây :)</p>
<p><img src="/img/clean-code-principle-format.png" alt="terrible format"></p>
<p>Để trình bày tốt hơn, có một số lưu ý như:</p>
<ul>
<li>Sử dụng một loại indentation thống nhất, tab cũng được, space cũng được, miễn sao thống nhất với nhau.</li>
<li>Để ý đến số kí tự mỗi dòng, số dòng của mỗi class.</li>
</ul>
<p>Về cấu trúc của source code:</p>
<ul>
<li>Phân biệt các phần theo chiều dọc.</li>
<li>Các hàm phụ thuộc hoặc tương tự nên được đặt gần nhau.</li>
<li>Đặt các hàm của bạn theo thứ tự trên xuống.</li>
</ul>
<h3 id="4-Test-test-test-va-test"><a href="#4-Test-test-test-va-test" class="headerlink" title="4. Test, test, test và test"></a>4. Test, test, test và test</h3><p>Test để đảm bảo code của bạn chạy đúng như mong đợi.</p>
<p>Áp dụng luật FIRST cho test:</p>
<ul>
<li>Fast: test phải chạy nhanh</li>
<li>Independent: test phải không phụ thuộc lẫn nhau</li>
<li>Repeatable: chạy được ở những môi trường khác nhau</li>
<li>Self-Validating: test phải có một output, là pass hay failed.</li>
<li>Timely: test code phải được viết trước khi viết production code.</li>
</ul>
<h3 id="5-Kho-thoang"><a href="#5-Kho-thoang" class="headerlink" title="5. Khô thoáng"></a>5. Khô thoáng</h3><p>Code của bạn phải luôn luôn khô thoáng, à nhầm, DRY nhé.<br>DRY là viết tắt của từ <code>Dont&#39;t Repeat Yourself</code>, tức là đừng lặp lại chính mình.</p>
<p>Đừng viết lại những đoạn code giống nhau ở những chỗ khác nhau. Điều này sẽ làm cho việc maintain khó khăn hơn, bạn sẽ bị thiếu khi sửa code ở chỗ này nhưng lại quên ở chỗ khác, và tất nhiên đây là một nguyên nhân gây ra bug 🐛.</p>
<p>Mỗi khi thấy mình phải viết những đoạn code giống nhau ở những nơi khác nhau, đó là lúc bạn nên tìm cách refactor để luôn DRY nhé.</p>
<hr>
]]></content:encoded>
      
      <comments>https://devnhanguoita.com/posts/Nhung-nguyen-li-co-ban-cua-chu-nghia-clean-code/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Chỉnh userAgent trong Chrome</title>
      <link>https://devnhanguoita.com/posts/Chinh-userAgent-trong-Chrome/</link>
      <guid>https://devnhanguoita.com/posts/Chinh-userAgent-trong-Chrome/</guid>
      <pubDate>Wed, 20 Sep 2017 13:43:15 GMT</pubDate>
      <description>
      
        Thay đổi user agent để test trang web của bạn một cách nhanh chóng trên Chrome Devtool không cần cài thêm extension
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="userAgent"><a href="#userAgent" class="headerlink" title="userAgent"></a>userAgent</h3><p>Thỉnh thoảng bạn muốn giả lập để kiểm tra trang web của mình có traffic đến từ những browser khác nhau như thế nào. Chrome và các trình duyệt khác đều cung cấp một nơi để bạn thay đổi các user agent này, vì vậy bạn có thể đổi user agent mà không cần phải cài thêm extension nào cả.</p>
<p>Dưới đây là cách thay đổi trên Chrome nhé.</p>
<h3 id="Thay-doi-userAgent"><a href="#Thay-doi-userAgent" class="headerlink" title="Thay đổi userAgent"></a>Thay đổi userAgent</h3><ol>
<li><p>Mở Devtool lên</p>
<p><code>More Tools &gt; Developer Tools</code>, hoặc phím tắt <code>Ctrl+Shift+I</code>(windows, linux), <code>Cmd+Option+I</code>(mac)</p>
<p><img src="/img/chinh-useragent-1.png" alt=""></p>
</li>
<li><p>Chọn menu Network Conditions</p>
<p><img src="/img/chinh-useragent-2.png" alt=""></p>
</li>
<li><p>Trong tab Network Condition, bỏ chọn ‘Select Automatically’ đi và chọn một userAgent nào đó trong danh sách hoặc tự điền vào nhé</p>
<p><img src="/img/chinh-useragent-3.png" alt=""></p>
</li>
</ol>
<p><em>Lưu ý những thay đổi này chỉ là tạm thời và áp dụng được khi Devtool vẫn còn bật và trên tab đó thôi nhé</em></p>
]]></content:encoded>
      
      <comments>https://devnhanguoita.com/posts/Chinh-userAgent-trong-Chrome/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Programmer Day</title>
      <link>https://devnhanguoita.com/posts/Programmer-Day/</link>
      <guid>https://devnhanguoita.com/posts/Programmer-Day/</guid>
      <pubDate>Wed, 13 Sep 2017 10:01:09 GMT</pubDate>
      <description>
      
        Ngày dành riêng cho lập trình viên, để tôn vinh những cống hiến của họ. Đó là ngày nào vậy?
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="Hom-nay-la-Programmer-Day"><a href="#Hom-nay-la-Programmer-Day" class="headerlink" title="Hôm nay là Programmer Day."></a>Hôm nay là Programmer Day.</h3><p>Ngày dành cho những người làm công việc lập trình như chúng ta! Ngày để vinh danh những đóng góp tích cực giúp thay đổi cuộc sống mỗi ngày của các lập trình viên :)</p>
<p>Ngày này bắt nguồn ở Nga, và cũng đã được công nhận chính thức ở nhiều nước khác trên thế giới.</p>
<p>Ngày lập trình viên là ngày thứ <code>256</code> của năm, và năm nay nó rơi vào ngày 13 tháng 9.</p>
<h3 id="Tai-sao-la-ngay-thu-256"><a href="#Tai-sao-la-ngay-thu-256" class="headerlink" title="Tại sao là ngày thứ 256?"></a>Tại sao là ngày thứ 256?</h3><p>256 là giá trị số tối đa mà 1 byte (8 bits) thể hiện được trong hệ nhị phân. Hơn nữa 256 cũng là giá trị số lớn nhất của mũ 2 mà nhỏ hơn 365.<br>Một con số rất quen thuộc với các lập trình viên.</p>
<p>Hãy cùng nhau thay đổi tương lai của mọi người !<br>Happy Programmer Day!</p>
<p>Xem thêm ở đây: <a href="https://en.m.wikipedia.org/wiki/Day_of_the_Programmer" target="_blank" rel="external">https://en.m.wikipedia.org/wiki/Day_of_the_Programmer</a></p>
]]></content:encoded>
      
      <comments>https://devnhanguoita.com/posts/Programmer-Day/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Trở thành dev con nhà người ta</title>
      <link>https://devnhanguoita.com/posts/Tro-thanh-dev-con-nha-nguoi-ta/</link>
      <guid>https://devnhanguoita.com/posts/Tro-thanh-dev-con-nha-nguoi-ta/</guid>
      <pubDate>Sat, 19 Aug 2017 03:22:01 GMT</pubDate>
      <description>
      
        Một số điều rút ra được từ các dev con nhà người ta về việc làm thế nào để trở thành developer tốt hơn..
      
      </description>
      
      <content:encoded><![CDATA[<p>Một số điều rút ra được từ các ‘dev con nhà người ta’ để trở thành developer tốt hơn..</p>
<h3 id="Doc-code-cua-nguoi-khac"><a href="#Doc-code-cua-nguoi-khac" class="headerlink" title="Đọc code của người khác"></a>Đọc code của người khác</h3><p>Đọc code của người khác và học hỏi từ họ. Các nơi lưu trữ code mã nguồn mở như Github là một nơi cực kì tốt cho bạn học code từ những developer khác. Bạn sẽ học được rất nhiều thứ đấy, từ cách tổ chức, cấu trúc thư mục đến cách làm việc của một công nghệ ABC nào đó, ..</p>
<h3 id="Nho-ai-do-doc-code-cua-minh"><a href="#Nho-ai-do-doc-code-cua-minh" class="headerlink" title="Nhờ ai đó đọc code của mình"></a>Nhờ ai đó đọc code của mình</h3><p>Thường xuyên nhờ người khác review code cho mình, cũng như thường xuyên pair programming với đồng nghiệp sẽ giúp bạn khá nhiều đấy.<br>Những người có nhiều kinh nghiệm hơn sẽ giúp bạn thấy các vấn đề mà nếu chỉ làm một mình thì bạn sẽ khó mà nhận ra được. Có thể là cách để refactor đoạn code nào đó đẹp hơn, dễ hiểu hơn, hay đơn giản là đặt tên biến có ý nghĩa hơn.</p>
<p><img src="/img/10_ways_pair.jpg" alt="Pair Programming"></p>
<h3 id="Fix-bug-truoc-khi-viet-code-moi"><a href="#Fix-bug-truoc-khi-viet-code-moi" class="headerlink" title="Fix bug trước khi viết code mới"></a>Fix bug trước khi viết code mới</h3><p>Bạn phát hiện ra một bug nhưng nghĩ “thôi, mình fix nó sau vậy, làm những tính năng này trước đã”. Hoặc bạn thấy một test case bị lỗi, nhưng không tìm hiểu tại sao nó lại lỗi, bạn comment test case đó đi.<br>Hãy tạo thói quen fix bug, giải quyết các issue tồn đọng sớm cho mình trước khi bắt tay vào code những tính năng mới, đừng để “technical debt” nhé, trả không nổi đâu :D</p>
<p><img src="/img/10_ways_bugs_comming.png" alt="Bugs comming"></p>
<h3 id="Hoc-cong-nghe-moi"><a href="#Hoc-cong-nghe-moi" class="headerlink" title="Học công nghệ mới"></a>Học công nghệ mới</h3><p>Luôn luôn học, cập nhật các công nghệ mới khi nào có thể. Một công nghệ X đang thịnh hành bây giờ nhưng chắc gì 5 - 10 năm sau vẫn còn được ưa chuộng. Hãy thử học cái gì đó mới xem sao, nếu bạn đang làm iOS, sao không thử làm web bằng Ruby on Rails chẳng hạn :)</p>
<h4 id="con-cap-nhat"><a href="#con-cap-nhat" class="headerlink" title="còn cập nhật"></a>còn cập nhật</h4>]]></content:encoded>
      
      <comments>https://devnhanguoita.com/posts/Tro-thanh-dev-con-nha-nguoi-ta/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Validate string trong python</title>
      <link>https://devnhanguoita.com/posts/Validate-string-trong-python/</link>
      <guid>https://devnhanguoita.com/posts/Validate-string-trong-python/</guid>
      <pubDate>Sat, 12 Aug 2017 04:21:16 GMT</pubDate>
      <description>
      
        Kiểm tra nhanh một chuỗi trong python có phải là chuỗi toàn số không hoặc là chuỗi toàn chữ không? Python có sẵn những phương thức này cho bạn...
      
      </description>
      
      <content:encoded><![CDATA[<p>Đôi lúc bạn muốn kiểm tra xem một chuỗi có phải là toàn là số hay không, hoặc một chuỗi toàn chữ viết hoa hay không. Hãy tham khảo một số hàm xây dựng sẵn trong python giúp validate chuỗi sau đây:</p>
<h3 id="1-isalnum"><a href="#1-isalnum" class="headerlink" title="1. isalnum()"></a>1. isalnum()</h3><p>Hàm này kiểm tra các kí tự trong chuỗi có phải là chữ hoặc số hay không (alphanumeric) (a-z, A-Z và 0-9)</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt;&gt; <span class="keyword">print</span> <span class="string">'abc123'</span>.isalnum()</div><div class="line"><span class="keyword">True</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">'xyz123#'</span>.isalnum()</div><div class="line"><span class="keyword">False</span></div></pre></td></tr></table></figure>
<h3 id="2-isalpha"><a href="#2-isalpha" class="headerlink" title="2. isalpha()"></a>2. isalpha()</h3><p>Kiểm tra các kí tự trong chuỗi có phải là chữ hay không (a-z và A-Z)<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">'abcD'</span>.isalpha()</div><div class="line"><span class="keyword">True</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">'abcd1'</span>.isalpha()</div><div class="line"><span class="keyword">False</span></div></pre></td></tr></table></figure></p>
<h3 id="3-isdigit"><a href="#3-isdigit" class="headerlink" title="3. isdigit()"></a>3. isdigit()</h3><p>Kiếm tra các kí tự trong chuỗi chỉ là số hay không (0-9)<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">'1234'</span>.isdigit()</div><div class="line"><span class="keyword">True</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">'123@abc'</span>.isdigit()</div><div class="line"><span class="keyword">False</span></div></pre></td></tr></table></figure></p>
<h3 id="4-islower"><a href="#4-islower" class="headerlink" title="4. islower()"></a>4. islower()</h3><p>Kiểm tra xem có phải tất cả các kí tự trong một chuỗi là viết thường hay không<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">'abcd123#'</span>.islower()</div><div class="line"><span class="keyword">True</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">'Abcd123#'</span>.islower()</div><div class="line"><span class="keyword">False</span></div></pre></td></tr></table></figure></p>
<h3 id="5-isupper"><a href="#5-isupper" class="headerlink" title="5. isupper()"></a>5. isupper()</h3><p>Ngược lại với <code>islower()</code>, phương thức này kiểm tra xem có phải tất cả các kí tự trong một chuỗi là viết hoa hay không.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">'ABCD123#'</span>.isupper()</div><div class="line"><span class="keyword">True</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">'Abcd123#'</span>.isupper()</div><div class="line"><span class="keyword">False</span></div></pre></td></tr></table></figure></p>
<p>Happy coding!</p>
]]></content:encoded>
      
      <comments>https://devnhanguoita.com/posts/Validate-string-trong-python/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Xử lí chuỗi cơ bản trong Python</title>
      <link>https://devnhanguoita.com/posts/Xu-li-chuoi-co-ban-trong-Python/</link>
      <guid>https://devnhanguoita.com/posts/Xu-li-chuoi-co-ban-trong-Python/</guid>
      <pubDate>Tue, 08 Aug 2017 15:37:57 GMT</pubDate>
      <description>
      
        Ghi chép về những phương thức xử lí chuỗi cơ bản trong Python như tìm chuỗi con, thay thế, lowercase..
      
      </description>
      
      <content:encoded><![CDATA[<p>Những ghi chép của một Dev đang tập tành học Python về các hàm xử lí chuỗi.</p>
<p>Giả sử mình có chuỗi sau nhé:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sample = <span class="string">"Dev nha nguoi ta"</span></div></pre></td></tr></table></figure></p>
<h3 id="1-Viet-thuong-lowercase"><a href="#1-Viet-thuong-lowercase" class="headerlink" title="1. Viết thường - lowercase"></a>1. Viết thường - lowercase</h3><p>Dùng hàm <code>lower()</code> để chuyển một chuỗi bất kì thành chuỗi viết thường<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>sample.lower()</div><div class="line"><span class="string">'dev nha nguoi ta'</span></div></pre></td></tr></table></figure></p>
<h3 id="2-Viet-hoa-UPPERCASE"><a href="#2-Viet-hoa-UPPERCASE" class="headerlink" title="2. Viết hoa - UPPERCASE"></a>2. Viết hoa - UPPERCASE</h3><p>Ngược lại, cũng có hàm <code>upper()</code> để viết hoa chuỗi đó<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>sample.upper()</div><div class="line"><span class="string">'DEV NHA NGUOI TA'</span></div></pre></td></tr></table></figure></p>
<h3 id="3-Viet-hoa-ki-tu-dau-tien-Capitalize"><a href="#3-Viet-hoa-ki-tu-dau-tien-Capitalize" class="headerlink" title="3. Viết hoa kí tự đầu tiên - Capitalize"></a>3. Viết hoa kí tự đầu tiên - Capitalize</h3><p><code>capitalize()</code> để viết hoa kí tự đầu tiên</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"hello world"</span>.capitalize()</div><div class="line"><span class="string">'Hello world'</span></div></pre></td></tr></table></figure>
<h3 id="4-Chuoi-con"><a href="#4-Chuoi-con" class="headerlink" title="4. Chuỗi con"></a>4. Chuỗi con</h3><p>Lấy chuỗi con ở các vị trí của chuỗi, theo một trong những cách sau:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>sample[<span class="number">4</span>:<span class="number">13</span>]</div><div class="line"><span class="string">'nha nguoi'</span></div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>sample[<span class="number">4</span>:]</div><div class="line"><span class="string">'nha nguoi ta'</span></div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>sample[:<span class="number">7</span>]</div><div class="line"><span class="string">'Dev nha'</span></div></pre></td></tr></table></figure></p>
<h3 id="5-Tim-chuoi-con"><a href="#5-Tim-chuoi-con" class="headerlink" title="5. Tìm chuỗi con"></a>5. Tìm chuỗi con</h3><p>Sử dụng hàm <code>find()</code> để tìm xem một chuỗi con có thuộc một chuỗi hay không. Hàm này trả về kết quả là vị trí bắt đầu của chuỗi con đó, và trả về -1 nếu không tìm thấy.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>sample.find(<span class="string">'nguoi'</span>)</div><div class="line"><span class="number">8</span></div></pre></td></tr></table></figure></p>
<p>Hàm <code>rfind()</code> tìm như <code>find()</code> nhưng theo chiều từ bên phải qua<br>Hãy so sánh:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>sample.rfind(<span class="string">'a'</span>)</div><div class="line"><span class="number">15</span></div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>sample.find(<span class="string">'a'</span>)</div><div class="line"><span class="number">6</span></div></pre></td></tr></table></figure></p>
<h3 id="6-Thay-the"><a href="#6-Thay-the" class="headerlink" title="6. Thay thế"></a>6. Thay thế</h3><p>Đơn giản với hàm <code>replace()</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>sample.replace(<span class="string">"nguoi ta"</span>, <span class="string">"minh"</span>)</div><div class="line">  <span class="string">'Dev nha minh'</span></div></pre></td></tr></table></figure></p>
]]></content:encoded>
      
      <comments>https://devnhanguoita.com/posts/Xu-li-chuoi-co-ban-trong-Python/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
